#include <iostream>using namespace std;#include "Identity.h"#include <fstream>#include <string>#include "globalFile.h"#include "student.h"#include "teacher.h"#include "manager.h"#include <conio.h>//#include <unistd.h>void studentMenu(Identity* &student){    while (true)    {                student->operMenu();        Student * stu = (Student *)student;        int select = 0;        cin >> select;        if (select == 1)        {            stu->applyOrder();        }        else if (select == 2)        {            stu->showMyOrder();        }        else if (select == 3)        {            stu->showAllOrder();        }        else if (select == 4)        {            stu->cancelOrder();        }        else        {            cout << "Log off successfully! " << endl;            exit(0);            return;        }    }}void teacherMenu(Identity * &teacher){    while (true)    {        teacher->operMenu();        Teacher * tea = (Teacher*)teacher;        int select = 0;        cin >> select;        if (select == 1)        {            tea->showAllOrder();        }        else if (select == 2)        {            tea->validOrder();        }        else        {            cout << "Log off successfully! " << endl;            exit(0);            return;        }    }}void managerMenu(Identity * &manager){    while (true)    {        //call the administrator submenu        manager->operMenu();        //The superclass pointer turns into a subclass pointer, calling other interfaces in the subclass        Manager * man = (Manager*)manager;        int select = 0;        //receive user options        cin >> select;        if (select == 1) //add account        {            //cout << "add account" << endl;            man->addPerson();        }        else if (select == 2) //view account        {            //cout << "view account" << endl;            man->showPerson();        }        else if (select == 3) //view comp        {            man->showComputer();        }        else if (select == 4) //clear reservation        {            //cout << "cancel" << endl;            man->cleanFile();        }        else        {            cout << "log off successfully" << endl;            exit(0);            return;        }    }}//Login functionvoid LoginIn(string fileName, int type){    Identity * person = NULL;    //read the file    std::ifstream ifs(fileName);    //situation that file is not exit    if (!ifs.is_open())    {        cout << "File does not exist" << endl;        ifs.close();        return;    }        int id = 0;    string name;    string pwd;        if (type == 1) //student login    {        cout << "input your student id " << endl;        cin >> id;    }    else if (type == 2)//teacher login    {        cout << "input your teacher id " << endl;        cin >> id;    }    cout << "input user name" << endl;    cin >> name;    cout << endl;    cout << "input password" << endl;    cin >> pwd;    int i=0;    char ch;    while ((ch=getch())!=13)    {        pwd+=ch;//overload        cout<<"*";    }    if (type == 1)    {        //Student login verification        int fId; //student id in file        string fName; //student name in file        string fPwd; //student password in file        while (ifs >> fId && ifs >> fName && ifs >> fPwd )        {            if (fId == id && fName == name && fPwd == pwd)      //If the information matches            {                cout << "student login successfully" << endl;                person = new Student(id, name, pwd);                    studentMenu(person);                return;            }        }    }    else if (type == 2)    {        //teacher login verification        int fId;        string fName;        string fPwd;        while (ifs >> fId && ifs >> fName && ifs >> fPwd)        {            if (fId == id && fName == name && fPwd == pwd)            {                cout << "teacher login successfully" << endl;                person = new Teacher(id, name, pwd);                teacherMenu(person);                return;            }        }    }    else if (type == 3)    {        //manager  login verification        string fName;        string fPwd;        while (ifs >> fName && ifs >> fPwd)        {            if (name == fName && pwd == fPwd)            {                cout << "Login successfully!" << endl;                //After successful login, press any key to enter the administrator interface                person = new Manager(name, pwd);                // enter manager submenu                managerMenu(person);                return;            }        }    }    cout << "Login fail!" << endl;    return;}int main(){//    char buff[1000];//    getcwd(buff, 1000);//    cout<<"buff:"<< buff << endl;            int select = 0;    while (true)    {        cout << "======================  Welcome  ====================="            << endl;        cout << endl << "Please enter your identity " << endl;        cout << "\t\t -------------------------------\n";        cout << "\t\t|                               |\n";        cout << "\t\t|          1.student            |\n";        cout << "\t\t|                               |\n";        cout << "\t\t|          2.teacher            |\n";        cout << "\t\t|                               |\n";        cout << "\t\t|          3.manager            |\n";        cout << "\t\t|                               |\n";        cout << "\t\t|          0.exit               |\n";        cout << "\t\t|                               |\n";        cout << "\t\t -------------------------------\n";        cout << "ÊSelect your operation: ";        cin >> select;        switch (select)        {        case 1:            LoginIn(STUDENT_FILE, 1);            break;        case 2:            LoginIn(TEACHER_FILE, 2);            break;        case 3:            LoginIn(ADMIN_FILE, 3);            break;        case 0 :            cout << "Have a good day!" << endl;            break;        default:            cout << "Wrong! Please select again" << endl;            break;        }    }    return 0;}